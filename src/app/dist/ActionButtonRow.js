(function(React2, react) {
  "use strict";
  const hubspot = {
    extend: render
  };
  const extend = (...args) => self.extend(...args);
  function render(renderCallback) {
    return extend((root, api) => {
      const renderCallbackResult = renderCallback(api);
      if (!React2.isValidElement(renderCallbackResult)) {
        throw new Error(`[hubspot.extend]: Expected callback function to return a valid element, got: ${renderCallbackResult}`);
      }
      react.createRoot(root).render(renderCallbackResult);
      root.mount();
    });
  }
  react.createRemoteReactComponent("Alert");
  const Button = react.createRemoteReactComponent("Button");
  const ButtonRow = react.createRemoteReactComponent("ButtonRow");
  react.createRemoteReactComponent("Card");
  react.createRemoteReactComponent("DescriptionList");
  react.createRemoteReactComponent("DescriptionListItem");
  const Divider = react.createRemoteReactComponent("Divider");
  react.createRemoteReactComponent("EmptyState");
  react.createRemoteReactComponent("ErrorState");
  react.createRemoteReactComponent("Form");
  react.createRemoteReactComponent("Heading");
  react.createRemoteReactComponent("Image");
  react.createRemoteReactComponent("Input");
  react.createRemoteReactComponent("Link");
  react.createRemoteReactComponent("TextArea");
  react.createRemoteReactComponent("Textarea");
  react.createRemoteReactComponent("LoadingSpinner");
  react.createRemoteReactComponent("ProgressBar");
  react.createRemoteReactComponent("Select");
  react.createRemoteReactComponent("Tag");
  const Text = react.createRemoteReactComponent("Text");
  react.createRemoteReactComponent("Tile");
  react.createRemoteReactComponent("Stack");
  react.createRemoteReactComponent("ToggleGroup");
  react.createRemoteReactComponent("StatisticsItem");
  react.createRemoteReactComponent("Statistics");
  react.createRemoteReactComponent("StatisticsTrend");
  react.createRemoteReactComponent("Table");
  react.createRemoteReactComponent("TableFooter");
  react.createRemoteReactComponent("TableCell");
  react.createRemoteReactComponent("TableRow");
  react.createRemoteReactComponent("TableBody");
  react.createRemoteReactComponent("TableHeader");
  react.createRemoteReactComponent("TableHead");
  react.createRemoteReactComponent("NumberInput");
  react.createRemoteReactComponent("Box");
  react.createRemoteReactComponent("StepIndicator");
  react.createRemoteReactComponent("Accordion");
  react.createRemoteReactComponent("MultiSelect");
  react.createRemoteReactComponent("Flex");
  var ServerlessExecutionStatus;
  (function(ServerlessExecutionStatus2) {
    ServerlessExecutionStatus2["Success"] = "SUCCESS";
    ServerlessExecutionStatus2["Error"] = "ERROR";
  })(ServerlessExecutionStatus || (ServerlessExecutionStatus = {}));
  function createExtensionComponent(componentType) {
    return react.createRemoteReactComponent(componentType);
  }
  createExtensionComponent("CrmObjectProperty");
  createExtensionComponent("CrmPropertyList");
  createExtensionComponent("CrmAssociationTable");
  const CrmDataHighlight = createExtensionComponent("CrmDataHighlight");
  createExtensionComponent("CrmReport");
  createExtensionComponent("CrmAssociationPivot");
  createExtensionComponent("CrmAssociationPropertyList");
  createExtensionComponent("CrmStageTracker");
  hubspot.extend(({ context, actions }) => /* @__PURE__ */ React2.createElement(Extension, { context, openIframeModal: actions.openIframeModal, fetchProperties: actions.fetchCrmObjectProperties }));
  const Extension = ({ context, openIframeModal, fetchProperties }) => {
    const [firstName, setFirstName] = React2.useState("");
    const [lastName, setLastName] = React2.useState("");
    const [email, setEmail] = React2.useState("");
    const [successMessage, setSuccessMessage] = React2.useState("");
    React2.useEffect(() => {
      fetchProperties(["firstname", "lastname", "email"]).then((properties) => {
        setFirstName(properties.firstname);
        setLastName(properties.lastname);
        setEmail(properties.email);
      });
    }, [fetchProperties]);
    return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(Text, { format: { fontWeight: "bold" } }, "Contact Action Center"), /* @__PURE__ */ React2.createElement(Text, null, " "), /* @__PURE__ */ React2.createElement(ButtonRow, null, /* @__PURE__ */ React2.createElement(
      Button,
      {
        onClick: () => {
          openIframeModal({
            uri: `https://aptitude8.tech/hs-rep-extension-demo-page?firstname=${firstName}&lastname=${lastName}&email=${email}&headline=PIN%20Reset%20Success&body=${firstName}%27s%20PIN%20has%20been%20reset%20successfully.%20An%20email%20has%20been%20sent%20to%20${email}%20with%20further%20instructions.`,
            height: 800,
            width: 1e3
          });
          console.log(firstName, lastName);
        },
        type: "button"
      },
      "Authentication/PIN"
    ), /* @__PURE__ */ React2.createElement(
      Button,
      {
        onClick: () => {
          openIframeModal({
            uri: `https://aptitude8.tech/hs-rep-extension-demo-page?firstname=${firstName}&lastname=${lastName}&email=${email}&headline=Account%20Creation%20Success&body=${firstName}'s%20new%20account%20has%20been%20successfully%20created%20with%20the%20email%20address%20${email}.`,
            height: 800,
            width: 1e3
          });
          console.log(firstName, lastName);
        },
        type: "button"
      },
      "Initiate New Account"
    ), /* @__PURE__ */ React2.createElement(
      Button,
      {
        onClick: () => {
          openIframeModal({
            uri: `https://aptitude8.tech/hs-rep-extension-demo-page?firstname=${firstName}&lastname=${lastName}&email=${email}&headline=Sync%20Success&body=${firstName}'s%20account%20data%20has%20been%20successfully%20synced%20with%20HubSpot.`,
            height: 800,
            width: 1e3
          });
          console.log(firstName, lastName);
        },
        type: "button"
      },
      "Update Account Information"
    )), /* @__PURE__ */ React2.createElement(Divider, { distance: "medium" }), /* @__PURE__ */ React2.createElement(Text, { format: { fontWeight: "bold" } }, "Send Offer"), /* @__PURE__ */ React2.createElement(Text, { variant: "microcopy" }, "Remind about paperless billing"), /* @__PURE__ */ React2.createElement(Text, null, " "), /* @__PURE__ */ React2.createElement(ButtonRow, null, /* @__PURE__ */ React2.createElement(
      Button,
      {
        onClick: () => {
          setSuccessMessage("Push notification sent!");
          setTimeout(() => {
            setSuccessMessage("");
          }, 1500);
        },
        type: "button"
      },
      "Send Paperless Billing Discount Offer"
    )), /* @__PURE__ */ React2.createElement(Text, null, " "), /* @__PURE__ */ React2.createElement(Text, null, successMessage), /* @__PURE__ */ React2.createElement(Divider, { distance: "medium" }), /* @__PURE__ */ React2.createElement(Text, { format: { fontWeight: "bold" } }, "Best Promotion Available"), /* @__PURE__ */ React2.createElement(Text, { variant: "microcopy" }, "FICO Score and Dark Web Monitoring"), /* @__PURE__ */ React2.createElement(ButtonRow, null, /* @__PURE__ */ React2.createElement(
      Button,
      {
        onClick: () => {
          openIframeModal({
            uri: "https://aptitude8.tech/hs-rep-extension-demo-page?offerings",
            height: 800,
            width: 1e3
          });
          console.log(firstName, lastName);
        },
        type: "button"
      },
      "View All Available Promotions"
    )), /* @__PURE__ */ React2.createElement(Divider, { distance: "medium" }), /* @__PURE__ */ React2.createElement(
      CrmDataHighlight,
      {
        properties: ["createdate", "lifecyclestage", "notes_last_updated", "notes_last_contacted"]
      }
    ), /* @__PURE__ */ React2.createElement(Divider, { distance: "medium" }), /* @__PURE__ */ React2.createElement(
      CrmDataHighlight,
      {
        properties: ["hs_analytics_average_page_views", "hs_analytics_last_visit_timestamp", "hs_analytics_last_url", "hs_analytics_num_visits"]
      }
    ), /* @__PURE__ */ React2.createElement(Divider, { distance: "medium" }), /* @__PURE__ */ React2.createElement(Text, { variant: "microcopy" }, "Developed by Aptitude8"));
  };
})(React, RemoteUI);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
